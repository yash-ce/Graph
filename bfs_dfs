
#include <iostream>
using namespace std;


vector<vector< pair<<int, int>>> G;
vector<int> vis;
void dfs(int u){
	
	vis[u] = 1;
	cout<<u<<endl;
	//  for all v adjacent to u
	for(int v: G[u]){
		if(!vis[v]){
			dfs(v);
		}
	}
	
}

void bfs(int r){
	queue<int> q;
	q.push(r);
	while(!q.empty()){
		int u = q.front();
		q.pop();
		if(vis[u])
			continue;
		vis[u] = 1;
		cout<<u<<endl;
		for(int v: G[u]){
			if(!vis[v]){
				q.push(v);
			}
		}
	}
}

int main() {
	// your code goes here
	
	int n, m;
	cin>>n>>m;
	
	G.resize(n+1);
	vis.resize(n+1);
	
	//vis[i] == 0 => i is not visited
	//vis[i] == 1 => i is  visited
	
	for(int i =0;i<m;i++){
		int u, v;
		cin>>u>>v;
		G[u].push_back(v);
		G[v].push_back(u);
	}
	return 0;
}
